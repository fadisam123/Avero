@using Avero.Web.ViewModels.Admin
@model viewProductsViewModel
@inject UserManager<User> UserManager;
@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@{
    var user = await UserManager.GetUserAsync(User);
    var userId = user?.Id;
}

@section style {
    <style>

        body {
            background: linear-gradient(to right, #25c481, #25b7c4);
        }

        .card {
            background: linear-gradient(45deg, #098766, transparent);
        }

        .btn {
            border-radius: 5px;
            margin-right: 10px;
        }

        nav {
            border: 1px solid white;
            border-radius: 5px;
        }

        .page-item.active .page-link {
            background-color: transparent;
            border: 1px solid green;
        }

        .page-link:focus {
            box-shadow: none;
        }
    </style>
}

    @if (TempData["add"] != null || TempData["edit"] != null || TempData["remove"] != null)
{
    <!-- toast -->
    <button hidden type="button" class="btn btn-primary" id="liveToastBtn"></button>

    <div style="z-index: 999999999999;" class="toast-container position-fixed bottom-0 end-0 p-3">
        <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <img style="width: 30px; height:auto" src="~/img/Avero-favicon.png" class="rounded me-2" alt="Avero" />
                <strong class="me-auto">Avero</strong>
                <small>Just Now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @if (TempData["edit"] != null)
                {
                    <span> Your product has been updated successfully. </span>
                }
                else if (TempData["add"] != null)
                {
                    <span> New Product Added successfully. </span>
                }
                else
                {
                    <span> The product is no longer available for order. </span>
                }
            </div>
        </div>
    </div>
}

<h1 class="text-center text-white mt-1">Your Products</h1>
<hr />
<div class="form-group d-flex flex-wrap justify-content-evenly">
    @for (int i = 0; i < Model.PaginatedProduct().Count(); i++)
    {
        int productIndex = ((@Model.currentPage - 1) * @Model.productPerPage) + i;
        var productAtIndex = @Model.products.ElementAt(productIndex);
        var pimgs = @productAtIndex.product_imgs.Where(pi => pi.product_id == @productAtIndex.Id).ToList();
        String main_img;
        if (pimgs.Any())
            main_img = pimgs[0].img_name;
        else
            main_img = "Default.jpg";


        if (productAtIndex.quantity_available > 0) // product is available
        {
            if (productAtIndex.offer_price_end_date >= DateTime.Now) // offer on
            {
                <a class="text-decoration-none text-white" asp-controller="Home" asp-action="viewProduct" asp-route-id="@productAtIndex.Id">
                    <div class="card text-center text-white mb-4" style="width: 18rem; flex: 0 0 32%;">
                        <img style="height: 260px; object-fit:cover" src="~/img/products/@main_img" class="card-img-top" alt="product image" asp-append-version="true" />
                        <div class="card-body">
                            <h5 class="card-title">@productAtIndex.name</h5>
                            <p class="card-text mb-0">Price: <span class="text-decoration-line-through">@productAtIndex.price_per_unit SYP</span></p>
                            <p class="card-text mb-0">Offer Price: @productAtIndex.offer_price SYP</p>
                            <p class="card-text mb-0">Offer End: @productAtIndex.offer_price_end_date</p>
                            <form class="mt-2" asp-controller="Admin" asp-action="deleteProduct" asp-route-id="@productAtIndex.Id" asp-route-currentPage="@Model.currentPage" method="post">
                                <a id="edit_@productAtIndex.Id" asp-action="editProduct" asp-controller="Admin" asp-route-id="@productAtIndex.Id" class="btn btn-primary">Edit</a>
                                <span id="confirmDeleteSpan_@productAtIndex.Id" style="display:none">
                                    <span>The product will become unavailable for order, Are you sure to do this?</span><br>
                                    <button type="submit" class="btn btn-danger">Yes</button>
                                    <a class="btn btn-primary"
                           onclick="confirmDelete('@productAtIndex.Id', false)">No</a>
                                </span>

                                <span id="deleteSpan_@productAtIndex.Id">
                                    <a class="btn btn-danger"
                           onclick="confirmDelete('@productAtIndex.Id', true)">Make Unavailable</a>
                                </span>
                            </form>
                        </div>
                    </div>
                </a>
            }
            else // offer off
            {
                <a class="text-decoration-none text-white" asp-controller="Home" asp-action="viewProduct" asp-route-id="@productAtIndex.Id">
                    <div class="card text-center text-white mb-4" style="width: 18rem; flex: 0 0 32%;">
                        <img style="height: 260px; object-fit:cover" src="~/img/products/@main_img" class="card-img-top" alt="product image" asp-append-version="true" />
                        <div class="card-body">
                            <h5 class="card-title">@productAtIndex.name</h5>
                            <p class="card-text mb-0">Price: @productAtIndex.price_per_unit SYP</p>
                            <form class="mt-2" asp-controller="Admin" asp-action="deleteProduct" asp-route-id="@productAtIndex.Id" asp-route-currentPage="@Model.currentPage" method="post">
                                <a id="edit_@productAtIndex.Id" asp-action="editProduct" asp-controller="Admin" asp-route-id="@productAtIndex.Id" class="btn btn-primary">Edit</a>
                                <span id="confirmDeleteSpan_@productAtIndex.Id" style="display:none">
                                    <span>The product will become unavailable for order, Are you sure to do this?</span><br>
                                    <button type="submit" class="btn btn-danger">Yes</button>
                                    <a class="btn btn-primary"
                           onclick="confirmDelete('@productAtIndex.Id', false)">No</a>
                                </span>

                                <span id="deleteSpan_@productAtIndex.Id">
                                    <a class="btn btn-danger"
                           onclick="confirmDelete('@productAtIndex.Id', true)">Make Unavailable</a>
                                </span>
                            </form>
                        </div>
                    </div>
                </a>
            }
        }
        else // product is unavailable (deleted)
        {
            <a class="text-decoration-none text-white" asp-controller="Home" asp-action="viewProduct" asp-route-id="@productAtIndex.Id">
                <div class="card text-center text-white mb-4" style="width: 18rem; flex: 0 0 32%;">
                    <img style="height: 260px; object-fit:cover" src="~/img/products/@main_img" class="card-img-top" alt="product image" asp-append-version="true" />
                    <div class="card-body">
                        <h5 class="card-title">@productAtIndex.name</h5>
                        <p class="card-text mb-0 text-warning">Unavailable for order</p>
                        <form class="mt-2" asp-controller="Admin" asp-action="deleteProduct" asp-route-id="@productAtIndex.Id" asp-route-currentPage="@Model.currentPage" method="post">
                            <a id="edit_@productAtIndex.Id" asp-action="editProduct" asp-controller="Admin" asp-route-id="@productAtIndex.Id" class="btn btn-primary">Edit</a>
                            <span id="confirmDeleteSpan_@productAtIndex.Id" style="display:none">
                                <span>The product will become unavailable for order, Are you sure to do this?</span><br>
                                <button type="submit" class="btn btn-danger">Yes</button>
                                <a class="btn btn-primary"
                           onclick="confirmDelete('@productAtIndex.Id', false)">No</a>
                            </span>
                            <span class="d-inline-block" tabindex="0" data-bs-toggle="tooltip" data-bs-title="Edit quantity of this product to make it available">
                                <span id="deleteSpan_@productAtIndex.Id">
                                    <a class="disabled btn btn-danger"
                               onclick="confirmDelete('@productAtIndex.Id', true)">Make Unavailable</a>
                                </span>
                            </span>
                        </form>
                    </div>
                </div>
            </a>
        }


    }
</div>

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center my-2">
        @if (Model.PageCount() > 1)
        {
            <li class="page-item">
                <a class="page-link prevPagination" href="#">
                    Previous
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.PageCount(); i++)
        {
            if ((i >= @Model.currentPage - 3 && i <= @Model.currentPage + 3) || (i == @Model.PageCount()))
            {
                <li class="@(i == Model.currentPage ? "page-item active" : "page-item")">
                    <a class="page-link text-success" href="@Url.Action("viewProducts", new {id = userId, page = i })">@i</a>
                </li>
            }
            else if (i == @Model.currentPage + 4 && i != @Model.PageCount())
            {
                <li class="mx-3 text-white">
                    . . .
                </li>
            }
        }
        @if (Model.PageCount() > 1)
        {
            <li class="page-item">
                <a class="page-link nextPagination text-success" href="#">
                    Next
                </a>
            </li>
        }
    </ul>
</nav>

@section script {
    <script>
        // Enable tooltips (initialize tooltips before they can be used)
        var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
        var tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

        if ('@TempData["add"]' != '' || '@TempData["edit"]' != '' || '@TempData["remove"]' != '') {
            // show toast if TempData["confirm"] != null
            document.getElementById('liveToastBtn').addEventListener('click', () => {
                const toast = new bootstrap.Toast(document.getElementById('liveToast'))
                toast.show()
            });
            document.getElementById('liveToastBtn').click();
        }

        if (@Model.PageCount() > 1) {
            if (@Model.currentPage == 1) {
                $('.prevPagination').parent().addClass("disabled");
            }
            else if (@Model.currentPage == @Model.PageCount()) {
                $('.nextPagination').parent().addClass("disabled");
            }
            else {
                $('.prevPagination').parent().removeClass("disabled");
                $('.nextPagination').parent().removeClass("disabled");
            }
            $('.prevPagination').attr("href", "@Url.Action("viewProducts", new {id = userId, page = @Model.currentPage-1 })");
            $('.nextPagination').attr("href", "@Url.Action("viewProducts", new {id = userId, page = @Model.currentPage+1 })");
        }

        function confirmDelete(uniqueId, isDeleteClicked) {

            var deleteSpan = 'deleteSpan_' + uniqueId;
            var confirmDeleteSpan = 'confirmDeleteSpan_' + uniqueId;
            var editLink = 'edit_' + uniqueId;

            if (isDeleteClicked) {
                $('#' + deleteSpan).hide();
                $('#' + editLink).hide();
                $('#' + confirmDeleteSpan).show();
            } else {
                $('#' + deleteSpan).show();
                $('#' + editLink).show();
                $('#' + confirmDeleteSpan).hide();
            }
        }
    </script>
            }